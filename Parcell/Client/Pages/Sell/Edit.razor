@page "/products/edit/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject HttpInterceptorService _interceptor
@implements IDisposable
<h3>Edit Product</h3>
@* Page for editing a specific product *@
<FormComponent ButtonText="Update" OnValidSubmit="EditProduct" product="product" />
@code {
    [Parameter] public int id { get; set; }
    Product product = new Product();
    protected async override Task OnParametersSetAsync()
    {
        _interceptor.MonitorEvent();
        product = await _client.GetFromJsonAsync<Product>($"{Endpoints.ProductsEndpoint}/{id}");
    }
    //Replaces the existing product with updated product through a PUT Request
    async Task EditProduct()
    {
        await _client.PutAsJsonAsync($"{Endpoints.ProductsEndpoint}/{id}", product);
        _navManager.NavigateTo("/products/");
    }
    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }
}  